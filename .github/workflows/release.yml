name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.2"
          cache: true

      - name: Display Go version
        run: go version

      - name: Download Go modules
        run: go mod download
      - name: Build for Windows (AMD64)
        run: GOOS=windows GOARCH=amd64 go build -o nyaru.exe ./
      - name: Calculate Artifact Hashes
        id: calculate_hashes
        run: |
          HASHES=$(sha256sum nyaru.exe)
          echo "hashes<<EOF" >> $GITHUB_OUTPUT
          echo "$HASHES" >> $GITHUB_OUTPUT 
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash
      - name: Prepare Release Notes
        id: prepare_notes
        run: |
          TAG_NAME=${{ github.ref_name }}
          COMMIT_SHA=${{ github.sha }}
          COMMIT_MESSAGE=$(git log -1 --pretty=%B --no-decorate ${{ github.sha }})
          ARTIFACT_HASHES="${{ steps.calculate_hashes.outputs.hashes }}"

          echo "release_body<<EOF" >> $GITHUB_OUTPUT
          echo "## $TAG_NAME" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT # 添加空行
          echo "**Tagged Commit:** \`$COMMIT_SHA\`" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT # 添加空行
          echo "### Changes" >> $GITHUB_OUTPUT
          echo -e "$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT # 添加空行
          echo "*Build artifacts attached below.*" >> $GITHUB_OUTPUT 
          echo "### Checksums (SHA-256)" >> $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT 
          echo -e "$ARTIFACT_HASHES" >> $GITHUB_OUTPUT 
          echo "\`\`\`" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "*Build artifacts attached below.*" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{steps.prepare_notes.outputs.release_body}}
          draft: false
          prerelease: false
          files: |
            nyaru.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
